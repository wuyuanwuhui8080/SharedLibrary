<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.share.blogs.mapper.ShareBlogsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.share.pojo.ShareBlogs">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="content" property="content"/>
        <result column="creation_date" property="creationDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="GETCOUNT" property="blogsGiveCount"/>
        <association property="users" javaType="com.share.pojo.SharedUsers">
            <id column="userId" property="id"/>
            <result column="head_img" property="headImg"/>
            <result column="realName" property="realName"/>
        </association>
        <collection property="blogsGive" ofType="com.share.pojo.ShareBlogsGive">
            <result property="giveUserId" column="USERGIVEID"/>
        </collection>
    </resultMap>

    <resultMap id="findListByUsersIdToBlosgsAndCommAndUsersMap" type="com.share.vo.BlosAndUsersAndCommAndGiva">
        <result column="b_id" property="blosId"/>
        <result column="b_content" property="blosContent"/>
        <result column="b_date" property="blosDate"/>
        <result column="blogsId" property="blosUserId"/>
        <result column="blogsImg" property="blosUserImg"/>
        <result column="blogsName" property="blosUserRealName"/>

        <result column="giveCount" property="giveCount"/>

        <collection property="blogsCommBOList" ofType="com.share.bo.BlogsCommBO">
            <result column="mIds" property="blosCommId"/>
            <result column="commentRetext" property="blosCommRetext"/>
            <result column="commDate" property="blosCommDate"/>
            <result column="commrealid" property="blosCommUsersId"/>
            <result column="commrealImg" property="blosCommUsersImg"/>
            <result column="commrealName" property="blosCommUsersRealName"/>
        </collection>

        <collection property="blosCommReplyBOList" ofType="com.share.bo.BlosCommReplyBO">
            <result column="r_id" property="blosCommReplyId"/>
            <result column="rRetext" property="blosCommReplyRetext"/>
            <result column="rDate" property="blosCommReplyDate"/>
            <result column="replyid" property="blosCommReplyUsersId"/>
            <result column="replyImg" property="blosCommReplyUsersImg"/>
            <result column="replyName" property="blosCommReplyUsersRealName"/>
            <result column="replyBlosId" property="commReplyBlosId"/>
            <result column="replybyUserID" property="commentByuserId"/>
            <result column="replyByUserRealName" property="commentByuserRealName"/>
        </collection>

        <collection property="blogsGiveBOList" ofType="com.share.bo.BlogsGiveBO">
            <result property="giveId" column="g_id"/>
            <result property="giveUserid" column="giveUserId"/>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, content, creation_date, update_date, blogs_title, blogs_digest
    </sql>

    <!--根据博客id级联删除，博客、点赞、评论、回复表的记录-->
    <delete id="deleteBlogs">
        DELETE b,c,r,g
        FROM share_blogs b
        LEFT JOIN share_blogs_comment c
        ON c.blogs_id = b.id
        LEFT JOIN share_blogs_comment_reply r
        ON r.comment_id = c.id
        LEFT JOIN share_blogs_give g
        ON g.blogs_id = b.id
        WHERE
        b.id =  #{id}
    </delete>

    <!--根据查询的list集合查询博客-->
    <select id="findListByUserId" resultMap="BaseResultMap">
        SELECT
        (SELECT
        COUNT(1)
        FROM share_blogs_give g
        WHERE g.blogs_id = b.id) AS GETCOUNT,
        (SELECT
        realName
        FROM shared_users u
        WHERE u.id = b.user_id) AS realName,
        (SELECT
        head_img
        FROM shared_users u
        WHERE u.id = b.user_id) AS head_img,
        (SELECT
        id
        FROM shared_users u
        WHERE u.id = b.user_id) AS userId,
        b.creation_date,
        b.content,b.id,
        u.id as USERGIVEID
        FROM share_blogs b
        LEFT join share_blogs_give g
        on g.blogs_id = b.id
        LEFT join shared_users u
        on u.id = g.give_user_id
        WHERE b.user_id IN
        <foreach collection="userId" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
        ORDER BY b.creation_date DESC
        LIMIT #{pageIndex},#{pageSize}
    </select>

    <!--根据传入的usersid查询博客表，点赞表，回复、评论、用户表的记录-->
    <select id="findListByUsersIdToBlosgsAndCommAndUsers" resultMap="findListByUsersIdToBlosgsAndCommAndUsersMap">
        SELECT
        (SELECT
        COUNT(1)
        FROM share_blogs_give g
        WHERE g.blogs_id = b.id) AS giveCount,
        r_users.id AS replybyUserID,
        r_users.realName AS replyByUserRealName,
        rep.id AS replyid,
        rep.head_img AS replyImg,
        rep.realName AS replyName,
        ms.id AS replyBlosId,
        sa.id AS commrealid,
        sa.head_img AS commrealImg,
        sa.realName AS commrealName,
        g.id AS g_id,
        g.give_user_id AS giveUserId,
        r.comment_retext AS rRetext
        ,r.comment_date AS rDate,
        m.comment_retext AS commentRetext
        ,b.content AS b_content,
        b.creation_date AS b_date
        ,b.id AS b_id,m.id AS mIds
        ,m.comment_date AS commDate
        ,r.id AS r_id,
        u.id AS blogsId,
        u.head_img AS blogsImg,
        u.realName AS blogsName
        FROM share_blogs b
        LEFT JOIN shared_users u
        ON u.id = b.user_id
        LEFT JOIN share_blogs_comment m
        ON m.blogs_id = b.id
        LEFT JOIN share_blogs_comment_reply r
        ON r.comment_id = m.id
        LEFT JOIN share_blogs_comment ms
        ON ms.id = r.comment_id
        LEFT JOIN shared_users sa
        ON sa.id=m.comment_user_id
        LEFT JOIN share_blogs_give g
        ON g.blogs_id=b.id
        LEFT JOIN shared_users rep
        ON rep.id=r.comment_user_id
        LEFT JOIN shared_users shus
        ON shus.id = g.give_user_id
        LEFT JOIN shared_users r_users
        ON r_users.id = r.comment_byuser_id
        WHERE b.user_id IN
        <foreach collection="blogsList" item="blogsList" close=")" open="(" separator=",">
            #{blogsList}
        </foreach>
        AND b.id IN
        (SELECT t.id
        FROM
        (SELECT b.id
        FROM share_blogs b
        ORDER BY b.creation_date
        DESC LIMIT #{pageIndex},#{pageSize}) AS t)
        ORDER BY b.creation_date DESC
    </select>
</mapper>
